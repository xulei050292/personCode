题目：

	Given a sorted array and a target value, return the index if the target is found. 
	If not, return the index where it would be if it were inserted in order.

	You may assume no duplicates in the array.

	Here are few examples.
	[1,3,5,6], 5 → 2
	[1,3,5,6], 2 → 1
	[1,3,5,6], 7 → 4
	[1,3,5,6], 0 → 0
	
	自己代码：
	public class Solution {
		public int searchInsert(int[] nums, int target) {
			int len = nums.length;
			if (len == 0) {
				return 0;
			}
			for (int i = 0; i < len; i++) {
				if (nums[i] == target) {
					return i;
				}else {
					if (nums[i] > target) {
						return i--;
					}
				}
			}
			return len; 
		}
	}
	
	代码优化：有序数组----》折半查找
	public static int searchInsert(int[] nums, int target) {
		int low = 0,high = nums.length - 1;
		while (low <= high) {
			int mid = (low + high) / 2;
			if (nums[mid] == target) {
				return mid;
			}else if (nums[mid] > target) {
				high = mid - 1;
			}else {
				low = mid + 1;
			}
		}
		return low;   
    }