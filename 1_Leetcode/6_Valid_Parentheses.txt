题目要求如下：
	Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
	The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.
	
	分析：
	public static boolean isValid(String s) {
		if (s.length() == 0 || s.length() == 1) {
			return false;
		}
		Stack<Character> stack = new Stack<Character>();
		for (int i = 0; i < s.length(); i++) {
			Character character = s.charAt(i);
			if (character == '(' || character == '{' || character == '[') {
				stack.push(character);
			}else {
				if (stack.size() == 0) {
					return false;
				}
				Character character2 = stack.peek();
				if (character == ')' && character2 == '(') {
					stack.pop();
				}else if (character == '}' && character2 == '{') {
					stack.pop();
				}else if (character == ']' && character2 == '[') {
					stack.pop();
				}else {
					stack.push(character2);
				}
			}
		}
		if (stack.empty()) {
			return true;
		}else {
			return false;
		}
    }
	
	leetcode上给出的最短代码分析：
	public static boolean isValid(String s) {
		
		Stack<Character> stack = new Stack<Character>();
		for (char c : s.toCharArray()) {
			if (c == '(') {
				stack.push(')');
			}else if (c == '{') {
				stack.push('}');
			}else if (c == '[') {
				stack.push(']');
			}else if (stack.isEmpty() || stack.pop() != c) {
				return false;
			}
		}
		return stack.isEmpty();
    }