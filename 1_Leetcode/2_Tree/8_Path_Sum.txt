题目：
	112. Path Sum

	Given a binary tree and a sum, determine if the tree has a root-to-leaf path 
	such that adding up all the values along the path equals the given sum.

	For example:
	Given the below binary tree and sum = 22,
				  5
				 / \
				4   8
			   /   / \
			  11  13  4
			 /  \      \
			7    2      1
	return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.

    递归方式：这个代码写的很好
		public class Solution {
			public boolean hasPathSum(TreeNode root, int sum) {
				if(root == null) {
					return false;
				}else if(root.left == null && root.right == null && root.val == sum){
					return true;
				}else {
					return hasPathSum(root.left,sum - root.val) || hasPathSum(root.right,sum - root.val); 
				}
			}
		}
		
	遍历实现方式：	http://www.cnblogs.com/ganganloveu/p/4131017.html
	  解题思路：
		深度优先遍历(DFS)，使用变量cur记录在栈中的节点之和。栈中的节点就是从根节点到当前节点的路径。如果当前节点是叶节点，则检查cur是否等于sum。