题目：
	爬梯子，每次只能爬1步或者2步，求一共有多少种爬法？
	
	递归：超时
	public class Solution {
		public int climbStairs(int n) {
			if (n == 1) {
				return 1;
			}else if (n == 2) {
				return 2;
			}else {
				return climbStairs(n - 1) + climbStairs(n - 2);
			}
		}
	}
	
	自己优化方案：
	public class Solution {
		public int climbStairs(int n) {
			int sumStep = 0;
			
			if (n == 1) {
				return 1;
			}else if (n == 2) {
				return 2;
			}else {
				int temp1 = 1;
				int temp2 = 2;
				for (int i = 3; i <= n; i++) {
					sumStep = temp1 + temp2;
					temp1 = temp2;
					temp2 = sumStep;
				}
			}
			return sumStep;
		}
	}
	
	