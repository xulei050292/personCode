/** 
 * 输入一颗二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。 
 * 要求不能创建任何新的结点，只能调整树中结点指针的指向。 
 */  
package swordForOffer;  
  
import utils.BinaryTreeNode;  
  
/** 
 * @author JInShuangQi 
 * 
 * 2015年8月6日 
 */  
public class E27ConvertBinarySearchTree {  
    public BinaryTreeNode convert(BinaryTreeNode root){  
        BinaryTreeNode node = null;  
        convert(root,node);  
        while(node != null && node.leftNode != null){  
            node = node.leftNode;  
        }  
        return node;  
    }  
    public void convert(BinaryTreeNode root,BinaryTreeNode lastNode){  
        if(root == null)  
            return;  
        BinaryTreeNode current = root;  
        if(current.leftNode != null)  
            convert(current.leftNode,lastNode);  
        current.leftNode = lastNode;  
        if(lastNode != null)  
            lastNode.rightNode = current;  
        if(current.rightNode != null)  
            convert(current.rightNode,lastNode);  
    }  
}  