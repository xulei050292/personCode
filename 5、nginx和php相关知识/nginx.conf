
//在网上找的一份配置信息比较全面的参考示例
worker_processes  8;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log  logs/access.log;

    sendfile        on;
    keepalive_timeout  60;

    tcp_nopush on;
    tcp_nodelay on;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_vary on;

    server {
        listen       80;
        server_name  example.qq.com;

        root /data/home/arnoliu/www/example/web;
        charset utf-8;

        location / {
            root  /data/home/arnoliu/www/example/web;
            index index.php index.html index.htm;
        }

        location ~ \.php$ {
            root          /data/home/arnoliu/www/example/web;
            fastcgi_pass  127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME  /data/home/arnoliu/www/example/web$fastcgi_script_name;
            include       fastcgi_params;
        }
    }
}



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
下面这个，是自己在百度真实的配置文件，往往不需要配置那么多，只需要配置大部分必须的项就可以了


#使用的用户
#user  work;
#指定工作衍生进程数
worker_processes  auto;
#记录错误日志级别
error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;
#进程ID存放位置
pid        logs/nginx.pid;
events {
    #允许的链接数
    worker_connections  10240;
}
http {
    include        mime.types;
    default_type   application/octet-stream;
    log_format     main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';
						 
    access_log     logs/access.log  main;

    sendfile       on;
    tcp_nopush     on;
    

    #服务端超时设定80S ，客户端70S断开链接
    keepalive_timeout  80 70;

    tcp_nodelay on;

    #开启gzip 压缩
    gzip  on;
    gzip_buffers 8 16k;
    gzip_min_length 1k;
    gzip_comp_level 2;
    gzip_http_version 1.1;
    gzip_types  text/plain application/x-javascript text/css  application/xml;
	
	
    #server端配置
    server {
        listen       80;
        server_name  bjyz-ump-ur-xulei15-dev.epc.baidu.com;

        root         /home/ssd0/soft/www/atm-331_BRANCH;
	    autoindex    off;

        location / {
            index  index.php index.html index.htm;
        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        
        location ~ \.php$ {
            fastcgi_pass   127.0.0.1:9090;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /home/ssd0/soft/www/atm-331_BRANCH/$fastcgi_script_name;
            include        fastcgi_params;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

